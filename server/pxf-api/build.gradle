apply plugin: "java-library"

jar {
    enabled = true
}

dependencies {

    /*******************************
     * Annotation Processors
     *******************************/

    annotationProcessor("org.springframework.boot:spring-boot-autoconfigure-processor")
    annotationProcessor("org.springframework.boot:spring-boot-configuration-processor")

    /*******************************
     * API Dependencies
     *******************************/

    api("org.apache.hadoop:hadoop-common:${hadoopVersion}") { transitive = false }
    api("org.springframework.boot:spring-boot-starter")
    api('org.springframework.boot:spring-boot-starter-web')

    /*******************************
     * Compile Only Dependencies
     *******************************/

    compileOnly("org.apache.hadoop:hadoop-annotations:${hadoopVersion}") { transitive = false }

    /*******************************
     * Implementation Dependencies
     *******************************/

    implementation("org.springframework.boot:spring-boot-starter-log4j2")

    implementation("com.google.guava:guava")
    implementation("commons-codec:commons-codec")
    implementation("commons-lang:commons-lang")
    implementation("org.apache.commons:commons-lang3")

    implementation("org.apache.hadoop:hadoop-auth:${hadoopVersion}") { transitive = false }

    implementation("com.fasterxml.jackson.core:jackson-core") { transitive = false }
    implementation("com.fasterxml.jackson.core:jackson-databind") { transitive = false }

    /*******************************
     * Test Dependencies
     *******************************/

    testImplementation('org.mockito:mockito-inline:3.1.0')
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
}

test {
    useJUnitPlatform()
}
